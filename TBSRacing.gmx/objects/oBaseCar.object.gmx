<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBasePhysicalMovable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// base
event_inherited();

flagSet(OBJ_PAR.UPDATABLE 
    | OBJ_PAR.DRAWABLE
    | OBJ_PAR.IMPACTABLE_PAUSE 
    | OBJ_PAR.IMPACTABLE_TURN, 1);
    //| OBJ_PAR.HAVE_LIGHT, 1);  

team = 0; // 0 - player, 1 - enemy

state = 0;
fixtures = -1; // our fixtures
fixturesCnt = 0;

// physical parameters
spd = 0;
spdMaxForward = 135;
spdMaxBackward = 55;
spdAccelForward = .4;
spdBrakeForward = .6;
spdAccelBackward = .3;
spdAccelBrake = .2;
spdDesiredPercent = 0;
spdDesired = 0;

engineTemperature = 0;
engineTemperatureIncr = .003;
engineMaxTemperature = 60;
engineHP = 350;
engineMaxHP = engineHP;


desiredAngle = 0;
angleTorque = .24;
angleIncr = .14;
angleStep = 0;
angleEqual = 0;

brake = 0;

inertiaDir = 0;
forwardDir = 0;
angleDif = 0;

type = CARS.__NONE;

weapon[0] = noone; // weapon objects
weaponsCount = 0;

// path
pathMove = path_add();
path_set_closed(pathMove, 0);
//path_set_kind(pathMove, 1);
//path_set_precision(pathMove, 2);


// particles
psys = part_system_create();
part_system_automatic_update(psys, 0);
part_system_depth(psys, 300);
part_system_automatic_draw(psys, 1);
part_system_position(psys, 0, 0);

pem = part_emitter_create(psys);

// tyre effect
ptyre = part_type_create();
part_type_life(ptyre, 30, 60);
part_type_alpha2(ptyre, .1, 0);

// car smoke
smoke = part_type_create();
part_type_sprite(smoke, sCarSmoke, 0, 0, 0);
part_type_size(smoke, .1, 1, .1, .1);
part_type_orientation(smoke, 0, 359, 1, 1, 0);
part_type_life(smoke, 10, 160);
part_type_alpha2(smoke, .1, 0);
part_type_speed(smoke, 2, 3, 0, 0);

dirt = part_type_create();
part_type_sprite(dirt, sGrassDirt, 0, 0, 1);
part_type_size(dirt, .1, 1, .1, .1);
part_type_orientation(dirt, 0, 359, 1, 1, 0);
part_type_life(dirt, 50, 90);
part_type_alpha2(dirt, .1, 0);
part_type_speed(dirt, 2, 3, 0, 0);

// lights
forwLightX = 0;
forwLightY = 0;
forwLightCol = c_yellow;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

path_delete(pathMove);
part_system_clear(psys);
part_emitter_destroy(psys, pem);
part_type_destroy(ptyre);
part_type_destroy(smoke);
part_type_destroy(dirt);

part_system_destroy(psys);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// off pause
image_speed = imgspdstop;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// on pause
imgspdstop = image_speed;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
