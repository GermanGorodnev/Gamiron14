<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>oStateObject</parentName>
  <maskName>sMask32x32</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// base
event_inherited();

flagSet(OBJ_PAR.UPDATABLE 
    | OBJ_PAR.DRAWABLE
    | OBJ_PAR.IMPACTABLE_PAUSE 
    | OBJ_PAR.IMPACTABLE_TURN, 1);  

state = 0;
// 0 - vertical choose
// 1 - edit

ind = 0;

CAR_ANGLE = oGarageController.CAR_ANGLE;

spr = -1;
spx = 0;
spy = 0;
xoff = 0;
yoff = 0;

st0x1 = x;
st0y1 = y;
st0w = 150;
st0h = 280;
st0c = c_black;
st0perc = 0;

xcenter = global.guiW / 2 - st0w / 2;
xwentfrom = 0;

spx = st0x1 + st0w / 2;
spy = st0y1 + st0h / 2;

image_xscale = st0w / 32;
image_yscale = st0h / 32;

wcount = 0;
wspr[0] = 0;
woff[0] = 0;
wlen[0] = 0;

st1perc = 0;

// rect for weaps
wSlot[0] = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!(flags &amp; OBJ_PAR.UPDATABLE))
    exit;
    
switch (state)
{
case 0:
    st0perc= min(1, st0perc + .05);
    if (oControl.key[KEY.MOUSE_LEFT] == 0)
    {
        if (mouseOnUs())
        {
            if (oGarageController.dragInd != -1
                &amp;&amp; oGarageController.folderAInd == 0)
            {
                // set the car
                garageCarSetCar(oGarageController.dragInd);
                with (oGarageController)
                {
                    dragInd = -1;
                    garageChangeFolder(folderAInd);
                    garageUpdateCarSlots();
                }
                with (oControl)
                    gameSave();
            }
            else
            {
                // go to detail mode
                var myind = ind;
                with (oGarageController)
                    garageStateInit(1, myind);   
            }
        }
    }
    break;
case 1: // edit
    // move to the center
    st1perc = min(1, st1perc + .08);
    var diff = xcenter - st0x1;
    st0x1 += max(min(abs(diff), 5), abs(diff) / 5) * sign(diff);
    spx = st0x1 + st0w / 2;
    x = st0x1;
    if (diff == 0)
        if (oControl.key[KEY.MOUSE_LEFT] == 0)
        {
            if (!mouseOnUs())
            {
                if (mouse_y &lt; oGarageController.folderyoff)
                {
                    if (instance_position(mouse_x, mouse_y, oBaseButton) == noone)
                    {
                        var myind = ind;
                        with (oGarageController)
                            garageStateInit(2, myind);                       
                    }
                }
            }
        }
    break;
    
case 2: // fadeaway
    st0perc= max(0, st0perc - .05);
    break;
    
case 3: // movein
    st1perc = max(0, st1perc - .08);
    st0perc = 1;
    var diff = xwentfrom - st0x1;
    st0x1 += max(min(abs(diff), 5), abs(diff) / 5) * sign(diff);
    spx = st0x1 + st0w / 2;
    if (diff == 0)
    {
        state = 0;
    }
    x = st0x1;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// off pause
image_speed = imgspdstop;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// on pause
imgspdstop = image_speed;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (state)
{
case 0:
case 1:
case 2:
case 3:
    drawCroppedRect(st0x1, st0y1, st0x1 + st0w * st0perc, st0y1 + st0h * st0perc, st0c, 1, 7);
    var xo = spx + xoff, 
        yo = spy + yoff;
    if (spr != -1)
    {
        draw_sprite_ext(spr, 0, xo, yo, 1, 1, 90, image_blend, st0perc);
    }    
    for (var i = 0; i &lt; wcount; i++)
    {
        if (wspr[i] == -1)
            continue;
        draw_sprite_ext(wspr[i], 0, xo + lengthdir_x(woff[i], CAR_ANGLE + wlen[i]), 
            yo + lengthdir_y(woff[i], CAR_ANGLE + wlen[i]), 1, 1, CAR_ANGLE, image_blend, st0perc);        
    }
    break;
}
//draw_sprite_ext(mask_index, 0, x, y, image_xscale, image_yscale, 0, image_blend, .5);
//draw_text(st0x1, st0y1, string(wcount));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
