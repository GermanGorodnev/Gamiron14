<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-501</depth>
  <persistent>0</persistent>
  <parentName>oBaseButton</parentName>
  <maskName>sMask32x32</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// base
event_inherited();
image_speed = 0;

flagSet(OBJ_PAR.UPDATABLE 
    | OBJ_PAR.DRAWABLE
    | OBJ_PAR.IMPACTABLE_PAUSE 
    | OBJ_PAR.IMPACTABLE_TURN, 1);  
    
rx1 = 0; //oGameController.carhpx + sprite_get_width(sCarHP) / 2 + 45 - sprite_get_width(sBrake);
ry1 = 0;
rx2 = 0;
ry2 = 0;

black = c_black;

xx = 0;
yy = 0;

weap = noone; // pointer
index = 0;
spr = -1;
img = 0;

needShoot = 0;
nsx1 = rx1 + 5;
nsy1 = ry1 + 5;
nsx2 = nsx1 + sprite_get_width(sShootSign) + 4;
nsy2 = nsy1 + sprite_get_height(sShootSign) + 4;

nsx = nsx1 + 2 + sprite_get_width(sShootSign) / 2;
nsy = nsy1 + 2 + sprite_get_height(sShootSign) / 2;

nscolactive = make_colour_hsv(255, 230, 115);
nscolinactive = make_colour_hsv(255, 0, 115);

image_xscale = 1;
image_yscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update
if (!(flags &amp; OBJ_PAR.UPDATABLE))
    exit;

if (oControl.key[KEY.MOUSE_LEFT] == 0)
{
    if ((weap.wHP / weap.wMaxHP) &gt;= .35)
    {                    
        // clicked weapon
        if (point_in_rectangle(mouse_x - view_xview, mouse_y - view_yview, nsx1, nsy1, nsx2, nsy2))
        {
            // clicked attack bt  
            with (weap)
                weaponSetShootNecessity(!needShoot);
        }
        else
        {
            if (mouseOnUs())
            {
                switch (spr)
                {
                case sGunShieldIco:
                    break;
                default:
                    // well, maybe shoot
                    with (oGameController)  
                        gameControllerGuistateSet(GUI_STATES.__WEAPON_TARGET);
                    oGameController.weaponTargeting = id; 
                    break;         
                }  
            }
        }
    }   
}


x = view_xview + rx1;
y = view_yview + ry1;

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// off pause
image_speed = imgspdstop;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// on pause
imgspdstop = image_speed;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw
if (!instance_exists(weap))
    exit;

drawCroppedRect(rx1 - 4, ry1 - 4, rx2 + 4, ry2 + 4, black, 1, 6);
var percent = weap.wHP / weap.wMaxHP,
    coldraw = -1;
if (percent &gt;= .75)
    coldraw = make_colour_hsv(90, 204, 70);
else if (percent &gt;= .35)
    coldraw = make_colour_hsv(14, 208, 70);
else
    coldraw = make_colour_hsv(254, 255, 72);
drawCroppedRect(rx1, ry1, rx2, ry2, coldraw, 1, 6);

draw_sprite_ext(spr, img, xx, yy, 1, 1, 0, image_blend, image_alpha);

// attack
var colIco, colRect;
if (weap.needShoot)
{
    colRect = nscolactive;
    colIco = c_white;
}
else
{
    colRect = nscolinactive;
    colIco = c_gray;
}
drawCroppedRect(nsx1 - 4, nsy1 - 4, nsx2 + 4, nsy2 + 4, c_black, 1, 8);
drawCroppedRect(nsx1, nsy1, nsx2, nsy2, colRect, 1, 8);
draw_sprite_ext(sShootSign, 0, nsx, nsy, 1, 1, 0, colIco, image_alpha);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (oGameController.weaponTargeting == id)
{
    with (weap)
    {
        var dd = point_direction(phy_position_x, phy_position_y, mouse_x, mouse_y);
        drawBigArrow(phy_position_x, phy_position_y, 
            phy_position_x + lengthdir_x(55, dd),
            phy_position_y + lengthdir_y(55, dd),
            colArrowInner, colArrowOuter, image_alpha);    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
